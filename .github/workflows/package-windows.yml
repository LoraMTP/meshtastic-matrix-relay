name: Package Windows Installer

on:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: write
  actions: read

jobs:
  build-windows-installer:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Extract version and git SHA
        id: get_version
        shell: bash
        run: |
          VERSION=$(grep "version =" setup.cfg | sed 's/.*= //')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"
          GIT_SHA=$(git rev-parse --short HEAD)
          echo "GIT_SHA=$GIT_SHA" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: pyinstaller --name=mmrelay.exe --onefile --console src/mmrelay/main.py

      - name: Build installer
        uses: nadeemjazmawe/inno-setup-action-cli@v6.0.5
        with:
          filepath: "/DAppVersion=${{ env.VERSION }}-dev-${{ env.GIT_SHA }} ./mmrelay.iss"

      - name: Upload installer as artifact
        uses: actions/upload-artifact@v4
        with:
          name: MMRelay_setup_${{ env.VERSION }}-dev-${{ env.GIT_SHA }}
          path: MMRelay_setup_${{ env.VERSION }}-dev-${{ env.GIT_SHA }}.exe

      - name: Upload installer to GitHub Release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: MMRelay_setup_${{ env.VERSION }}-dev-${{ env.GIT_SHA }}.exe
          asset_name: MMRelay_setup_${{ env.VERSION }}-dev-${{ env.GIT_SHA }}.exe
          tag: ${{ github.ref }}
          overwrite: true
