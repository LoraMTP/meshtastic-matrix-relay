name: Build PYZ for ARMv7

permissions:
  contents: write

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-armv7-pyz:
    runs-on: ubuntu-latest
    name: Build PYZ (armv7)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Build inside ARMv7 Docker (using shiv)
        uses: addnab/docker-run-action@v3
        with:
          image: arm32v7/python:3.11
          # Options:
          # --platform: Ensures Docker pulls the ARM manifest
          # -v: Mounts the checked-out code from the runner into the container
          # -w: Sets the working directory inside the container to where the code is mounted
          options: --platform linux/arm/v7 -v ${{ github.workspace }}:/github/workspace -w /github/workspace
          run: |
            set -e # Exit script immediately if any command fails

            echo "--- Installing build dependencies (apt) ---"
            apt-get update && apt-get install -y --no-install-recommends gcc libffi-dev libssl-dev

            echo "--- Installing Python dependencies (pip from root requirements.txt) ---"
            # Installs dependencies listed in the requirements.txt located in the repository root
            pip install --no-cache-dir -r requirements.txt

            echo "--- Installing shiv ---"
            pip install --no-cache-dir shiv

            echo "--- Building PYZ (shiv targeting subdirectory) ---"
            # Define the output filename using the extracted version
            PYZ_FILENAME="mmrelay_armv7_${{ steps.get_version.outputs.VERSION }}.pyz"
            # Tell shiv to build the package located in the ./meshtastic_matrix_relay subdirectory
            # It will find the pyproject.toml within that directory to understand the package structure.
            # -c main_cli specifies the console script entry point defined in your pyproject.toml
            shiv ./meshtastic_matrix_relay -o "${PYZ_FILENAME}" -c main_cli --compressed

            echo "--- Listing created PYZ file ---"
            # Verify the output file was created in the current directory (/github/workspace)
            ls -l "${PYZ_FILENAME}"

      - name: Upload PYZ to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/mmrelay_armv7_${{ steps.get_version.outputs.VERSION }}.pyz
          asset_name: mmrelay_armv7_${{ steps.get_version.outputs.VERSION }}.pyz
          tag: ${{ github.ref_name }}
          overwrite: true