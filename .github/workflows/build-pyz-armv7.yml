name: Build PYZ for ARMv7

permissions:
  contents: write

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-armv7-pyz:
    runs-on: ubuntu-latest
    name: Build PYZ (armv7)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Build inside ARMv7 Docker (using shiv)
        uses: addnab/docker-run-action@v3
        with:
          image: arm32v7/python:3.11
          options: --platform linux/arm/v7
          run: |
            set -e # Exit immediately if a command exits with a non-zero status.

            echo "--- Current directory contents ---"
            ls -la # Add this to see the structure at the start

            echo "--- Installing build dependencies ---"
            apt-get update && apt-get install -y --no-install-recommends gcc libffi-dev libssl-dev

            echo "--- Installing Python dependencies ---"
            # Specify the correct path to requirements.txt
            pip install --no-cache-dir -r meshtastic_matrix_relay/requirements.txt

            echo "--- Installing shiv ---"
            pip install --no-cache-dir shiv

            echo "--- Building PYZ ---"
            # Define the output filename using the extracted version
            PYZ_FILENAME="mmrelay_armv7_${{ steps.get_version.outputs.VERSION }}.pyz"
            # Tell shiv to build the package *from* the subdirectory
            # Use the console script name defined in pyproject.toml ('main_cli') as the entry point
            shiv ./meshtastic_matrix_relay -o "${PYZ_FILENAME}" -c main_cli --compressed

            echo "--- Listing files ---"
            ls -l *.pyz # Check if the PYZ file was created in the workspace root

      - name: Upload PYZ to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: mmrelay_armv7_${{ steps.get_version.outputs.VERSION }}.pyz
          asset_name: mmrelay_armv7_${{ steps.get_version.outputs.VERSION }}.pyz
          tag: ${{ github.ref_name }}
          overwrite: true